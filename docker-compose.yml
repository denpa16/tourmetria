version: '3.8'

x-app_environment: &app_environment
  environment:
    - DEBUG
    - SECRET_KEY
    - POSTGRES_PASSWORD
    - POSTGRES_HOST
    - POSTGRES_PORT
    - POSTGRES_NAME
    - POSTGRES_USER
    - SITE_HOST
    - EMAIL_HOST
    - EMAIL_HOST_USER
    - EMAIL_HOST_PASSWORD
    - EMAIL_PORT
    - EMAIL_USE_TLS
    - SERVER_EMAIL
    - SENTRY_DSN
    - YND_ACCESS_KEY_ID
    - YND_SECRET_ACCESS_KEY
    - YND_STORAGE_BUCKET_NAME
    - YND_STORAGE_ENDPOINT_URL
#    - FLOWER_BASIC_AUTH
    - IMGPROXY_DEVELOPMENT_ERRORS_MODE
    - IMGPROXY_MAX_SRC_RESOLUTION
    - IMGPROXY_ALLOWED_SOURCES
    - IMGPROXY_SITE_HOST
    - IMGPROXY_KEY
    - IMGPROXY_SALT
    - SLETATRU_URL
    - SLETATRU_LOGIN
    - SLETATRU_PASSWORD
    - TG_BOT_TOKEN

services:
  nginx:
    volumes:
      - nginx_cache:/var/lib/nginx/proxy_cache
      - static:/var/www/static/
    build:
      context: ./nginx
    depends_on:
      - backend
    ports:
      - 80:80
      - 443:443
    environment:
      - TLS_MODE
      - HTPASSWD_NODE
      - HTPASSWD
      - MONITORING_HTPASSWD

  backend:
    build:
      context: ./backend
    <<: *app_environment
    depends_on:
      - db

  telegram:
    build:
      context: ./backend
    depends_on:
      - backend
    <<: *app_environment

  db:
    image: postgres:15.3-alpine
    volumes:
      - postgresdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD
      - POSTGRES_PORT
      - POSTGRES_NAME
      - POSTGRES_USER

  redis:
    image: redis:6.2-alpine
    volumes:
      - redisdata:/data

  celery:
    build:
      context: ./backend
    command: celery -A config worker -l info -c 1 -n celery@dats.com --without-gossip --without-mingle -Q celery
    depends_on:
      - db
      - redis
    <<: *app_environment

  celery-beat:
    build:
      context: ./backend
    command: celery -A config worker -l info -E --without-gossip --without-mingle -Q bg
    depends_on:
      - db
      - redis
    <<: *app_environment

  celery-important:
    build:
      context: ./backend
    command: celery -A config worker -l info -E  --without-gossip --without-mingle -Q important
    depends_on:
      - db
      - redis
    <<: *app_environment

  imgproxy:
    build:
      context: ./imageproxy
    environment:
      - IMGPROXY_DEVELOPMENT_ERRORS_MODE
      - IMGPROXY_ALLOWED_SOURCES
      - IMGPROXY_USE_S3=true
      - IMGPROXY_LOG_LEVEL=debug
      - IMGPROXY_KEY
      - IMGPROXY_SALT
      - AWS_ACCESS_KEY_ID
      - IMGPROXY_S3_ENDPOINT
      - AWS_SECRET_ACCESS_KEY
      - IMGPROXY_SENTRY_DSN
      - IMGPROXY_MAX_SRC_RESOLUTION
      - IMGPROXY_ALLOW_ORIGIN


volumes:
  static:
  redisdata:
  postgresdata:
  nginx_cache:
  nuxt:
