# Generated by Django 4.1.7 on 2023-05-29 14:28

from django.conf import settings
import django.contrib.postgres.indexes
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.functions.text


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="APIRequestLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "username_persistent",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="Поле сохраняется даже если объект пользователя удален",
                        max_length=200,
                        null=True,
                        verbose_name="Имя пользователя",
                    ),
                ),
                (
                    "requested_at",
                    models.DateTimeField(db_index=True, verbose_name="Дата и время запроса"),
                ),
                (
                    "response_ms",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Время выполнения кода представления, мс"
                    ),
                ),
                (
                    "path",
                    models.CharField(db_index=True, max_length=200, verbose_name="URL запроса"),
                ),
                (
                    "view",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=200,
                        null=True,
                        verbose_name="View запроса",
                    ),
                ),
                (
                    "view_method",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=200,
                        null=True,
                        verbose_name="View-метод запроса",
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(
                        db_index=True, verbose_name="IP-адрес источника запроса"
                    ),
                ),
                ("host", models.URLField(db_index=True, verbose_name="Хост")),
                (
                    "method",
                    models.CharField(db_index=True, max_length=10, verbose_name="Метод запроса"),
                ),
                (
                    "query_params",
                    models.TextField(blank=True, null=True, verbose_name="Параметры запроса"),
                ),
                ("data", models.TextField(blank=True, null=True, verbose_name="Данные")),
                ("response", models.TextField(blank=True, null=True, verbose_name="Ответ")),
                ("errors", models.TextField(blank=True, null=True, verbose_name="Ошибки")),
                (
                    "status_code",
                    models.PositiveIntegerField(
                        blank=True, db_index=True, null=True, verbose_name="Статус ответа"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Лог запроса к DRF API",
                "verbose_name_plural": "Логи запросов к DRF API",
            },
        ),
        migrations.AddIndex(
            model_name="apirequestlog",
            index=models.Index(
                django.db.models.functions.text.Upper("username_persistent"),
                name="username_persistent_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="apirequestlog",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["username_persistent"],
                name="username_persistent_gin_idx",
                opclasses=["gin_trgm_ops"],
            ),
        ),
        migrations.AddIndex(
            model_name="apirequestlog",
            index=django.contrib.postgres.indexes.GinIndex(
                django.contrib.postgres.indexes.OpClass(
                    django.db.models.functions.text.Upper("username_persistent"),
                    name="gin_trgm_ops",
                ),
                name="username_persistent_up_gin_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="apirequestlog",
            index=models.Index(django.db.models.functions.text.Upper("path"), name="path_idx"),
        ),
        migrations.AddIndex(
            model_name="apirequestlog",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["path"], name="path_gin_idx", opclasses=["gin_trgm_ops"]
            ),
        ),
        migrations.AddIndex(
            model_name="apirequestlog",
            index=django.contrib.postgres.indexes.GinIndex(
                django.contrib.postgres.indexes.OpClass(
                    django.db.models.functions.text.Upper("path"), name="gin_trgm_ops"
                ),
                name="path_up_gin_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="apirequestlog",
            index=models.Index(django.db.models.functions.text.Upper("view"), name="view_idx"),
        ),
        migrations.AddIndex(
            model_name="apirequestlog",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["view"], name="view_gin_idx", opclasses=["gin_trgm_ops"]
            ),
        ),
        migrations.AddIndex(
            model_name="apirequestlog",
            index=django.contrib.postgres.indexes.GinIndex(
                django.contrib.postgres.indexes.OpClass(
                    django.db.models.functions.text.Upper("view"), name="gin_trgm_ops"
                ),
                name="view_upper_gin_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="apirequestlog",
            index=models.Index(
                django.db.models.functions.text.Upper("view_method"), name="view_method_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="apirequestlog",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["view_method"], name="view_method_gin_idx", opclasses=["gin_trgm_ops"]
            ),
        ),
        migrations.AddIndex(
            model_name="apirequestlog",
            index=django.contrib.postgres.indexes.GinIndex(
                django.contrib.postgres.indexes.OpClass(
                    django.db.models.functions.text.Upper("view_method"), name="gin_trgm_ops"
                ),
                name="view_method_upper_gin_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="apirequestlog",
            index=models.Index(django.db.models.functions.text.Upper("host"), name="host_idx"),
        ),
        migrations.AddIndex(
            model_name="apirequestlog",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["host"], name="host_gin_idx", opclasses=["gin_trgm_ops"]
            ),
        ),
        migrations.AddIndex(
            model_name="apirequestlog",
            index=django.contrib.postgres.indexes.GinIndex(
                django.contrib.postgres.indexes.OpClass(
                    django.db.models.functions.text.Upper("host"), name="gin_trgm_ops"
                ),
                name="host_upper_gin_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="apirequestlog",
            index=models.Index(django.db.models.functions.text.Upper("method"), name="method_idx"),
        ),
        migrations.AddIndex(
            model_name="apirequestlog",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["method"], name="method_gin_idx", opclasses=["gin_trgm_ops"]
            ),
        ),
        migrations.AddIndex(
            model_name="apirequestlog",
            index=django.contrib.postgres.indexes.GinIndex(
                django.contrib.postgres.indexes.OpClass(
                    django.db.models.functions.text.Upper("method"), name="gin_trgm_ops"
                ),
                name="method_upper_gin_idx",
            ),
        ),
    ]
